name: 'Create Adapter Release Branch'

description: 'Creates a new adapter release branch, validates inputs, applies boilerplate changes, and opens a PR.'

inputs:
  adapter-version:
    type: string
    description: 'Adapter version (e.g. ''4.9.2.0.0'')'
    required: true
  partner-version:
    type: string
    description: 'Partner version (e.g. ''~> 9.2.0'')'
    required: true

runs:
  using: 'composite'
  steps:
  
    # Check out the repo at the specified branch or tag.
    - name: Checkout Branch
      uses: actions/checkout@v3

    # Validate adapter and partner versions are compatible.
    - name: Validate Adapter and Partner Version Match
      run: ruby "${{ github.action_path }}/../scripts/adapters/validate-adapter-and-partner-versions.rb" "${{ inputs.adapter-version }}" "${{ inputs.partner-version }}"
      shell: bash

    # Validate adapter version is well-formed and not already released.
    - name: Validate Adapter Version
      run: ruby "${{ github.action_path }}/../scripts/adapters/validate-new-adapter-release-version.rb" "${{ inputs.adapter-version }}"
      shell: bash

    # Validate partner version is well-formed.
    - name: Validate Partner Version
      run: ruby "${{ github.action_path }}/../scripts/adapters/validate-partner-version.rb" "${{ inputs.partner-version }}"
      shell: bash

    # Create and checkout branch
    - name: Create Branch
      run: git checkout -b "release/${{ inputs.adapter-version }}"
      shell: bash

    # Update version strings in podspec.
    - name: Update Version Strings in Podspec
      run: ruby "${{ github.action_path }}/../scripts/adapters/update-podspec-versions.rb" "${{ inputs.adapter-version }}" "${{ inputs.partner-version }}"
      shell: bash

    # Update version string in main adapter class.
    - name: Update Version String in Partner Adapter Class
      run: ruby "${{ github.action_path }}/../scripts/adapters/update-adapter-class-version.rb" "${{ inputs.adapter-version }}"
      shell: bash

    # Add new changelog entry for the current adapter version.
    - name: Add Changelog Entry
      run: ruby "${{ github.action_path }}/../scripts/adapters/add-changelog-entry.rb" "${{ inputs.adapter-version }}" "${{ inputs.partner-version }}"
      shell: bash

    # Commit changes to podspec, changelog, and main adapter class file.
    - name: Commit Changes
      run: git add *.podspec CHANGELOG.md Source/*Adapter.swift && git commit -m "[AUTO-GENERATED] Update version to ${{ inputs.adapter-version }}"
      shell: bash

    # Update copyright headers for all files.
    - name: Update Copyright Headers
      id: copyright-headers
      run: echo "files=$(ruby ${{ github.action_path }}/../scripts/adapters/update-copyright-headers.rb)" >> $GITHUB_OUTPUT
      shell: bash

    # Commit changes to all source files.
    - name: Commit Changes
      if: ${{ steps.copyright-headers.outputs.files != '' }}
      run: git add ${{ steps.copyright-headers.outputs.files }} && git commit -m "[AUTO-GENERATED] Update copyright headers"
      shell: bash

    # Update min OS version to match partner SDK.
    - name: Update Min OS Version
      id: min-os-version
      run: echo "files=$(ruby ${{ github.action_path }}/../scripts/adapters/update-min-os-version.rb '${{ inputs.partner-version }}')" >> $GITHUB_OUTPUT
      shell: bash

    # Commit changes to all source files.
    - name: Commit Changes
      if: ${{ steps.min-os-version.outputs.files != '' }}
      run: git add ${{ steps.min-os-version.outputs.files }} && git commit -m "[AUTO-GENERATED] Update min OS version to match partner"
      shell: bash

    # Push changes.
    - name: Push Changes
      run: git push -u origin "release/${{ inputs.adapter-version }}"
      shell: bash

    # Open a pull request from the new branch to main.
    - name: Open Pull Request
      run: gh pr create --base "main" --reviewer "@ChartBoost/helium-ios" --title "Update Version to ${{ inputs.adapter-version }}" --body "Adapter version '${{ inputs.adapter-version }}', partner version '${{ inputs.partner-version }}'" --label "do not merge"
      shell: bash
